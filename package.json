{
  "name": "monorepo",
  "version": "0.14.0",
  "private": true,
  "homepage": "https://fluidframework.com",
  "repository": {
    "type": "git",
    "url": "https://github.com/microsoft/FluidFramework.git",
    "directory": ""
  },
  "license": "MIT",
  "author": "Microsoft and contributors",
  "workspaces": {
    "packages": [
      "packages/*/*",
      "examples/**",
      "experimental/*/*",
      "server/routerlicious/packages/gitresources",
      "server/routerlicious/packages/*",
      "common/**",
      "tools/**"
    ],
    "nohoist": [
      "**/@fluidframework/mocha-test-setup",
      "**/@types/expect-puppeteer",
      "**/@types/jwt-decode"
    ]
  },
  "scripts": {
    "build": "yarn run policy-check && yarn run layer-check && yarn run build:genver && yarn run build:compile && yarn run lint",
    "build:ci": "yarn run build:genver && lerna run build:compile --stream",
    "build:compile": "lerna run build:compile --stream",
    "build:docs": "lerna run build:docs --stream --parallel",
    "build:fast": "fluid-build --root .",
    "build:full": "yarn run build:genver && yarn run build:full:compile && yarn run lint",
    "build:full:compile": "lerna run build:full:compile --stream",
    "build:gendocs": "copyfiles server/routerlicious/_api-extractor-temp/** ./_api-extractor-temp/doc-models/ -f -V && cd docs && yarn run build",
    "build:genver": "lerna run build:genver --stream --parallel",
    "bump-version": "fluid-bump-version --root .",
    "bundle-analysis:collect": "yarn run webpack:profile && fluid-collect-bundle-analyses",
    "bundle-analysis:run": "fluid-run-bundle-analyses",
    "ci:build": "yarn run build:genver && lerna run build:compile --stream",
    "ci:build:docs": "lerna run ci:build:docs --stream --parallel",
    "ci:test": "yarn run test:report ; t1=$? ; yarn run test:copyresults ; exit $t1",
    "ci:test:coverage": "yarn run test:coverage ; t1=$? ; yarn run test:copyresults ; exit $t1",
    "clean": "lerna run clean --stream --parallel && yarn run clean:docs && yarn run clean:nyc",
    "clean:docs": "rimraf **/_api-extractor-temp docs/api/*/**",
    "clean:nyc": "rimraf nyc/**",
    "clean:r11s": "cd server/routerlicious && yarn run clean",
    "dedup": "yarn-deduplicate",
    "install-strict": "npx midgard-yarn install",
    "layer-check": "fluid-layer-check --info tools/build-tools/data/layerInfo.json",
    "lint": "lerna run lint --no-sort --stream -- -- -- --color",
    "lint:fix": "lerna run lint:fix --no-sort --stream -- -- -- --color",
    "policy-check": "fluid-repo-policy-check",
    "policy-check:fix": "fluid-repo-policy-check -r",
    "post-lerna-install:default": "[ -f package-lock.json ] && mv package-lock.json lerna-package-lock.json; [ -f package-lock.json.bak ] && mv package-lock.json.bak package-lock.json; exit 0",
    "post-lerna-install:win32": "if exist package-lock.json move package-lock.json lerna-package-lock.json && if exist package-lock.json.bak move package-lock.json.bak package-lock.json",
    "postinstall:lerna": "run-script-os",
    "postinstall:lerna:default": "yarn run pre-lerna-install:default && { lerna bootstrap --strict --hoist;t1=$?;yarn run post-lerna-install:default;exit $t1;}",
    "postinstall:lerna:win32": "yarn run pre-lerna-install:win32 && (lerna bootstrap --strict --hoist & yarn run post-lerna-install:win32)",
    "pre-lerna-install:default": "[ -f package-lock.json ] && mv package-lock.json package-lock.json.bak; [ -f lerna-package-lock.json ] && mv lerna-package-lock.json package-lock.json; exit 0",
    "pre-lerna-install:win32": "if exist package-lock.json move package-lock.json package-lock.json.bak && if exist lerna-package-lock.json move lerna-package-lock.json package-lock.json",
    "restart": "cd server/routerlicious && yarn run restart",
    "start:docker": "docker-compose -f server/docker-compose.yml up",
    "stop:docker": "docker-compose -f server/docker-compose.yml down",
    "stop:docker:full": "docker-compose -f server/docker-compose.yml down && docker volume prune --force",
    "test": "yarn run test:mocha && yarn run test:jest && yarn run test:types && yarn run test:realsvc",
    "test:bail": "yarn run test:mocha:bail && yarn run test:jest:bail",
    "test:copyresults": "copyfiles --exclude \"**/node_modules/**\" \"**/nyc/**\" nyc",
    "test:coverage": "c8 yarn run test:report",
    "test:fromroot": "mocha \"packages/**/dist/test/**/*.spec.js\" --exit",
    "test:jest": "assign-test-ports && lerna run test:jest --concurrency 4 --stream --no-bail --no-sort -- -- --color",
    "test:jest:bail": "assign-test-ports && lerna run test:jest --concurrency 4 --stream",
    "test:jest:report": "assign-test-ports && lerna run test:jest --concurrency 4 --stream --no-bail --no-sort -- -- --ci --reporters=default --reporters=jest-junit",
    "test:mocha": "lerna run test:mocha --stream --no-bail --no-sort -- -- --color",
    "test:mocha:bail": "lerna run test:mocha --stream",
    "test:mocha:report": "lerna run test:mocha --stream --no-bail --no-sort -- -- --timeout 4s --reporter xunit --reporter-option output=nyc/mocha-junit-report.xml",
    "test:realsvc": "lerna run test:realsvc --stream --no-bail --no-sort",
    "test:realsvc:report": "lerna run test:realsvc:report --stream --no-bail --no-sort",
    "test:report": "yarn run test:mocha:report && yarn run test:jest:report && yarn run test:realsvc:report",
    "test:types": "lerna run test:types --stream --no-bail --no-sort",
    "tsc": "lerna run tsc --stream",
    "tsc:fast": "fluid-build  --root . -s tsc",
    "tsfmt": "lerna run tsfmt:fix --no-sort --stream --no-bail",
    "tsfmt:fix": "lerna run tsfmt:fix --no-sort --stream --no-bail",
    "typetests:gen": "fluid-type-validator -m packages -v",
    "typetests:prepare": "yarn run typetests:gen -- -p",
    "watch": "concurrently \"yarn run watch:tsc\" \"yarn run watch:esnext\" \"yarn run watch:webpack\"",
    "watch:esnext": "lerna run --parallel build:esnext -- -- --watch",
    "watch:tsc": "lerna run --parallel tsc -- -- --watch",
    "watch:webpack": "lerna run --parallel webpack -- -- --watch",
    "webpack": "lerna run --no-sort webpack --stream",
    "webpack:profile": "lerna run --no-sort webpack:profile --stream"
  },
  "c8": {
    "all": true,
    "cache-dir": "nyc/.cache",
    "exclude": [
      "**/*.d.ts",
      "**/src/test/**/*.ts",
      "**/dist/test/**/*.js",
      "experimental/examples/**",
      "experimental/PropertyDDS/examples/**",
      "**/*.bundle.js"
    ],
    "exclude-after-remap": false,
    "extension": [
      ".ts",
      ".tsx",
      ".js",
      ".jsx"
    ],
    "include": [
      "packages/**/src/**/*.ts",
      "packages/**/dist/**/*.js",
      "experimental/**/src/**/*.ts",
      "experimental/**/dist/**/*.js"
    ],
    "report-dir": "nyc/report",
    "reporter": [
      "cobertura",
      "html",
      "text"
    ],
    "temp-directory": "nyc/.nyc_output"
  },
  "devDependencies": {
    "@fluidframework/build-tools": "^0.2.61804",
    "@fluidframework/test-tools": "^0.2.3074",
    "@microsoft/api-documenter": "^7.17.9",
    "@microsoft/api-extractor": "^7.22.2",
    "@nrwl/cli": "^13.10.2",
    "@nrwl/nx-cloud": "^13.3.1",
    "@nrwl/tao": "^13.10.2",
    "@nrwl/workspace": "^13.10.2",
    "c8": "^7.7.1",
    "concurrently": "^6.2.0",
    "copyfiles": "^2.1.0",
    "eslint": "~8.6.0",
    "lerna": "^4.0.0",
    "nx": "^13.10.2",
    "rimraf": "^2.6.2",
    "run-script-os": "^1.1.6",
    "typescript": "~4.1.3",
    "yarn-deduplicate": "^4.0.0"
  },
  "fluidBuild": {
    "repoPackages": {
      "build": "common/build",
      "common-def": "common/lib/common-definitions",
      "common-utils": "common/lib/common-utils",
      "core-interfaces": "common/lib/core-interfaces",
      "protocol-def": "common/lib/protocol-definitions",
      "driver-def": "common/lib/driver-definitions",
      "container-def": "common/lib/container-definitions",
      "server": "server/routerlicious",
      "client": {
        "directory": "",
        "ignoredDirs": []
      },
      "tools": [
        "tools/benchmark",
        "server/tinylicious",
        "server/azure-local-service"
      ],
      "services": {
        "directory": "server",
        "ignoredDirs": [
          "routerlicious",
          "tinylicious",
          "azure-local-service"
        ]
      }
    }
  }
}
