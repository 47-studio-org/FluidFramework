{
  "name": "root",
  "version": "0.0.1",
  "private": true,
  "homepage": "https://fluidframework.com",
  "repository": {
    "type": "git",
    "url": "https://github.com/microsoft/FluidFramework.git",
    "directory": "server/routerlicious"
  },
  "license": "MIT",
  "author": "Microsoft and contributors",
  "scripts": {
    "build": "pnpm run policy-check && pnpm run build:genver && pnpm run build:compile && pnpm run lint",
    "build:compile": "pnpm -r build:compile --workspace-concurrency 8",
    "build:docs": "pnpm -r build:docs --workspace-concurrency 8",
    "build:fast": "fluid-build --root ../.. --server",
    "build:full": "pnpm run build:genver && pnpm run build:full:compile && pnpm run lint",
    "build:full:compile": "pnpm -r build:full:compile --workspace-concurrency 8",
    "build:gendocs": "api-documenter markdown -i _api-extractor-temp/doc-models -o docs/api",
    "build:genver": "pnpm -r build:genver --workspace-concurrency 8",
    "bump-version": "lerna version minor --no-push --no-git-tag-version && pnpm run build:genver",
    "ci:build": "pnpm run build:genver && pnpm -r build:compile --workspace-concurrency 8",
    "ci:build:docs": "pnpm -r ci:build:docs --workspace-concurrency 8",
    "ci:test": "pnpm run test:report;t1=$?;pnpm run test:copyresults; exit $t1",
    "ci:test:coverage": "pnpm run test:coverage;t1=$?;pnpm run test:copyresults; exit $t1",
    "clean": "pnpm -r clean --workspace-concurrency 8 && pnpm run clean:docs && pnpm run clean:nyc",
    "clean:docs": "rimraf **/_api-extractor-temp docs/api/*/**",
    "clean:nyc": "rimraf nyc/**",
    "docker-build": "docker-compose build",
    "docker-clean": "docker-compose down --rmi local -v",
    "-postinstall": "pnpm run postinstall:lerna",
    "lint": "pnpm -r lint --no-sort --workspace-concurrency 8",
    "lint:fix": "pnpm -r lint:fix --no-sort --workspace-concurrency 8",
    "lint:strict": "pnpm -r lint --workspace-concurrency 8 -- -- -- --report-unused-disable-directives",
    "policy-check": "fluid-repo-policy-check",
    "policy-check:fix": "fluid-repo-policy-check -r",
    "post-lerna-install:default": "[ -f package-lock.json ] && mv package-lock.json lerna-package-lock.json; [ -f package-lock.json.bak ] && mv package-lock.json.bak package-lock.json; exit 0",
    "post-lerna-install:win32": "if exist package-lock.json move package-lock.json lerna-package-lock.json && if exist package-lock.json.bak move package-lock.json.bak package-lock.json",
    "postinstall:lerna": "run-script-os",
    "postinstall:lerna:default": "pnpm run pre-lerna-install:default && { lerna bootstrap --strict --hoist;t1=$?;pnpm run post-lerna-install:default;exit $t1;}",
    "postinstall:lerna:win32": "pnpm run pre-lerna-install:win32 && (lerna bootstrap --strict --hoist & pnpm run post-lerna-install:win32)",
    "pre-lerna-install:default": "[ -f package-lock.json ] && mv package-lock.json package-lock.json.bak; [ -f lerna-package-lock.json ] && mv lerna-package-lock.json package-lock.json; exit 0",
    "pre-lerna-install:win32": "if exist package-lock.json move package-lock.json package-lock.json.bak && if exist lerna-package-lock.json move lerna-package-lock.json package-lock.json",
    "restart": "docker-compose restart gateway && docker-compose restart alfred && docker-compose restart deli && docker-compose restart scriptorium && docker-compose restart foreman && docker-compose restart paparazzi",
    "start": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml up",
    "start:debug": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml -f docker-compose.debug.yml up",
    "start:debug:service": "docker-compose -f docker-compose.service.yml -f docker-compose.dev.yml -f docker-compose.debug.yml up -V",
    "start:rdkafka": "docker-compose -f docker-compose.rdkafka.yml -f docker-compose.dev.yml up",
    "start:service": "docker-compose -f docker-compose.service.yml -f docker-compose.dev.yml up -V",
    "stop": "docker-compose down",
    "stop:full": "docker-compose down -v",
    "test": "pnpm -r test --workspace-concurrency 8 --no-bail --no-sort",
    "test:copyresults": "copyfiles --exclude \"**/node_modules/**\" \"**/nyc/**\" nyc",
    "test:coverage": "nyc pnpm run test:report",
    "test:fromroot": "mocha \"packages/**/dist/test/**/*.spec.js\" --exit",
    "test:report": "pnpm -r test --workspace-concurrency 8 --no-bail --no-sort -- -- --reporter xunit --reporter-option output=nyc/junit-report.xml",
    "tsc": "pnpm -r tsc --workspace-concurrency 8",
    "tsfmt": "pnpm -r tsfmt:fix --no-sort --workspace-concurrency 8 --no-bail",
    "tsfmt:fix": "pnpm -r tsfmt:fix --no-sort --workspace-concurrency 8 --no-bail",
    "watch": "concurrently \"pnpm run watch:tsc\" \"pnpm run watch:esnext\"",
    "watch:esnext": "pnpm -r --parallel build:esnext -- -- --watch",
    "watch:tsc": "pnpm -r --parallel tsc -- -- --watch"
  },
  "nyc": {
    "all": true,
    "cache-dir": "nyc/.cache",
    "exclude": [],
    "include": [],
    "report-dir": "nyc/report",
    "reporter": [
      "cobertura",
      "html",
      "text"
    ],
    "temp-directory": "nyc/.nyc_output"
  },
  "dependencies": {},
  "devDependencies": {
    "@fluidframework/build-tools": "^0.2.61804",
    "@microsoft/api-documenter": "^7.17.9",
    "@microsoft/api-extractor": "^7.22.2",
    "concurrently": "^6.2.0",
    "copyfiles": "^2.1.0",
    "lerna": "^4.0.0",
    "nyc": "^15.0.0",
    "rimraf": "^2.6.2",
    "run-script-os": "^1.1.5",
    "typescript": "~4.5.5"
  }
}
